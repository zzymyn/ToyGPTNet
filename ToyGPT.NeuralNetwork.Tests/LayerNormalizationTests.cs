using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using NUnit.Framework;
using ToyGPT.NeuralNetwork.Layers;

namespace ToyGPT.NeuralNetwork.Tests;

public class LayerNormalizationTests
{
	[Test]
	public void ForwardTest1()
	{
		var inputs = new float[,]
		{
			{ 1.0087056481167398f, -0.32312335207581294f, 0.12774641529117436f, 0.2797729121798553f, 1.2887315783166664f, 1.6252963132317597f, -0.4691904015887759f, -1.2494003008116203f, -0.2604252382178964f, -0.14755040284667892f, -0.48018262510651216f, -1.7084253180688822f, },
			{ 1.1018829351309218f, -0.05008987692391544f, 2.541940654713701f, 1.2096423446050881f, 1.9390751949774627f, -0.2972106968076526f, 1.3209130301064143f, 0.01973591046000662f, 0.48642205133097544f, -1.8668304825816444f, 0.41367562584743556f, 0.14192178702429678f, },
			{ -0.04619635623129329f, 0.4261630629304077f, 0.6463610680084128f, 0.8471000171463201f, 0.18989319662109796f, 0.6993181715560572f, -0.6716470880133554f, -0.751860519951948f, 1.579281692178901f, -0.5982598325878206f, 2.106430757645254f, -1.2194822247359636f, },
		};
		var lnG = new float[]
		{
			-0.4439467093877689f, 0.8009444082326587f, 0.9626186799270124f, 0.308815507184925f, -0.7215397656569214f, 0.4016349423782146f, 0.9547007658735488f, -0.7501024662552288f, 0.12774084765714838f, 1.4253893123545152f, 0.5767622598367841f, 1.8674569497882285f,
		};
		var lnB = new float[]
		{
			-0.5091082898993017f, -1.0096076859421284f, -0.8557137508186077f, -0.07213645740472847f, -1.0666284141425246f, -0.5802896836804899f, -0.9790438658285089f, 1.0075241033557254f, 0.11290766036893884f, -1.0425674426778337f, 1.8318803582861216f, -1.4124307813311485f,
		};
		var expected = new float[,]
		{
			{ -0.9992957134585803f, -1.2639235953405255f, -0.6980687836665438f, 0.028552672113904123f, -2.079003253736886f, 0.12753006381932153f, -1.431038576108963f, 1.9873728351126017f, 0.08089680946381225f, -1.2280140237820114f, 1.552049712382758f, -4.766904061138594f, },
			{ -0.7190487484649684f, -1.467047348202859f, 0.8558270512407484f, 0.10406034942188476f, -1.9553015196828571f, -0.8996249631277398f, -0.33805745822591626f, 1.3884583698804733f, 0.1020637176490497f, -4.203537136069266f, 1.7448933609631956f, -2.154011349801966f, },
			{ -0.3622866204049513f, -0.8753240552110982f, -0.47068306996545956f, 0.11678997881505183f, -1.0077317362722011f, -0.3972018247416228f, -1.9247876884982154f, 1.8140713612272577f, 0.28973753045084427f, -2.344217037583989f, 2.9510696954652382f, -4.341773304114317f, },
		};

		var output = ArrayFactory.NewSameSize(inputs);
		LayerNormalization.Forward(inputs, lnG, lnB, output);
		Assert.That(output, Is.EqualTo(expected).Within(0.00001f));
	}
}
